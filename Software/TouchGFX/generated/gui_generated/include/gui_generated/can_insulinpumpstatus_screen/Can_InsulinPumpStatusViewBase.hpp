/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CAN_INSULINPUMPSTATUSVIEWBASE_HPP
#define CAN_INSULINPUMPSTATUSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/can_insulinpumpstatus_screen/Can_InsulinPumpStatusPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <gui/containers/BackButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>

class Can_InsulinPumpStatusViewBase : public touchgfx::View<Can_InsulinPumpStatusPresenter>
{
public:
    Can_InsulinPumpStatusViewBase();
    virtual ~Can_InsulinPumpStatusViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleButtonClickVirtFunc()
    {
        // Override and implement this function in Can_InsulinPumpStatus
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image Image12;
    touchgfx::FadeAnimator< touchgfx::Box > box2;
    touchgfx::Box box1;
    touchgfx::TextAreaWithOneWildcard BloodSugarValueField;
    BackButton backButton1;
    touchgfx::TextAreaWithOneWildcard PumpStatus;
    touchgfx::TextArea PumpTitle;
    touchgfx::Box OverrideBackground;
    touchgfx::TextArea ProtectionLabel;
    touchgfx::TextAreaWithOneWildcard ProtectionActiveField;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger >  flexButton1;
    touchgfx::Image LockedIcon;
    touchgfx::Image UnlockedIcon;
    touchgfx::ToggleButton InsulinToggle;
    touchgfx::TextArea unit_top;
    touchgfx::TextArea unit_bottom;
    touchgfx::Line unit_divider;
    touchgfx::PainterRGB565 unit_dividerPainter;
    touchgfx::Image Image3;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > FLAG_FIELD;

    /*
     * Wildcard Buffers
     */
    static const uint16_t BLOODSUGARVALUEFIELD_SIZE = 10;
    touchgfx::Unicode::UnicodeChar BloodSugarValueFieldBuffer[BLOODSUGARVALUEFIELD_SIZE];
    static const uint16_t PUMPSTATUS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar PumpStatusBuffer[PUMPSTATUS_SIZE];
    static const uint16_t PROTECTIONACTIVEFIELD_SIZE = 10;
    touchgfx::Unicode::UnicodeChar ProtectionActiveFieldBuffer[PROTECTIONACTIVEFIELD_SIZE];
    static const uint16_t FLAG_FIELD_SIZE = 40;
    touchgfx::Unicode::UnicodeChar FLAG_FIELDBuffer[FLAG_FIELD_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Can_InsulinPumpStatusViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Can_InsulinPumpStatusViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // CAN_INSULINPUMPSTATUSVIEWBASE_HPP
