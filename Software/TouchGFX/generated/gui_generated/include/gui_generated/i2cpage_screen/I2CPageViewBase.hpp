/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef I2CPAGEVIEWBASE_HPP
#define I2CPAGEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/i2cpage_screen/I2CPagePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <gui/containers/BackButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class I2CPageViewBase : public touchgfx::View<I2CPagePresenter>
{
public:
    I2CPageViewBase();
    virtual ~I2CPageViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image Image12;
    BackButton backButton1;
    touchgfx::TextArea PumpTitle;
    touchgfx::TextArea PumpStatus;
    touchgfx::TextArea PumpStatus_1;
    touchgfx::TextArea PumpStatus_2;
    touchgfx::TextArea PumpStatus_3;
    touchgfx::Image InfoIcon;
    touchgfx::TextArea PumpAllowedLabel;
    touchgfx::TextArea TempLabel;
    touchgfx::TextAreaWithOneWildcard PumpAllowedStatus;
    touchgfx::TextAreaWithOneWildcard TempValue;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > FLAG_FIELD;

    /*
     * Wildcard Buffers
     */
    static const uint16_t PUMPALLOWEDSTATUS_SIZE = 14;
    touchgfx::Unicode::UnicodeChar PumpAllowedStatusBuffer[PUMPALLOWEDSTATUS_SIZE];
    static const uint16_t TEMPVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar TempValueBuffer[TEMPVALUE_SIZE];
    static const uint16_t FLAG_FIELD_SIZE = 20;
    touchgfx::Unicode::UnicodeChar FLAG_FIELDBuffer[FLAG_FIELD_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // I2CPAGEVIEWBASE_HPP
